{
  "openapi": "3.0.1",
  "info": {
    "title": "DMI Open Data API - Met observation",
    "description": "<h2>Free access to the Danish Meteorological Institutes data.  <img style=\"float: right; max-width: 6%;\" src='https://www.dmi.dk/fileadmin/templates/img/logo.png'></img></h2>                    <p>The services provided by this API require authentication and an authentication key is mandatory.<br/>In order to retrieve data it is necessary to register as user. Read more here: <a style=\"text-decoration: none;\" href=\"https://opendatadocs.dmi.govcloud.dk/en/Authentication\">Authentication</a></p>                    <p><a style=\"text-decoration: none;\" href=\"https://opendatadocs.dmi.govcloud.dk/en/APIs/Meteorological_Observation_API\">Information about the Meteorological Observation service</a></p>                    <p>This service follows the standard for OGC API Features as described in <a href=\"https://docs.opengeospatial.org/is/17-069r3/17-069r3.html\">OGC API - Features - Part 1: Core</a></p>",
    "termsOfService": "https://opendatadocs.dmi.govcloud.dk/en/Terms_of_Use",
    "contact": {
      "name": "DMI Open Data",
      "url": "https://opendatadocs.dmi.govcloud.dk/en/DMIOpenData"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://dmigw.govcloud.dk",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Met station",
      "description": "Get list of metdata stations"
    },
    {
      "name": "Met observation",
      "description": "Get data for met observations"
    },
    {
      "name": "Capabilities",
      "description": "Get metadata about the service API and service data"
    }
  ],
  "paths": {
    "/v2/metObs/conformance": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Get the list of conformance classes that this service implements",
        "externalDocs": {
          "url": "https://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_declaration_of_conformance_classes"
        },
        "operationId": "getTheConformance",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conformance"
                },
                "example": {
                  "conformsTo": [
                    "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core",
                    "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30",
                    "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/metObs/collections": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "operationId": "getCollections",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collections"
                }
              }
            }
          }
        }
      }
    },
    "/v2/metObs/collections/station": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Get information about the station feature collection",
        "externalDocs": {
          "url": "https://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_collections_"
        },
        "operationId": "getStationCollection",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          }
        }
      }
    },
    "/v2/metObs/collections/station/items": {
      "get": {
        "tags": [
          "Met station"
        ],
        "summary": "Get stations",
        "operationId": "getStations",
        "parameters": [
          {
            "name": "datetime",
            "in": "query",
            "description": "datetime searching as specified in https://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_parameter_datetime \nan dates as specified in RFC3339 https://tools.ietf.org/html/rfc3339",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Stations valid from February 12, 2018, 00:00:00 UTC to March 18, 2018, 12:31:12 UTC:": {
                "description": "Returns stations valid on a closed time interval.",
                "value": "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
              },
              "default": {
                "description": "default"
              },
              "Stations valid on February 12, 2018, 23:20:52 UTC:": {
                "description": "Returns stations valid on a specific timestamp.",
                "value": "2018-02-12T23:20:52Z"
              },
              "Stations valid on March 18, 2018, 12:31:12 UTC or earlier:": {
                "description": "Returns stations valid before and up til a given end time ",
                "value": "../2018-03-18T12:31:12Z"
              },
              "Stations valid on February 12, 2018, 00:00:00 UTC or later:": {
                "description": "Returns stations valid after and on a given start time.",
                "value": "2018-02-12T00:00:00Z/.."
              }
            }
          },
          {
            "name": "stationId",
            "in": "query",
            "description": "Filter by stationId",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter results by station status. Status can be either Active or Inactive. See station list <a href=\"https://opendatadocs.dmi.govcloud.dk/Data/Meteorological_Observation_Data_Stations\">here</a>",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "default": {
                "description": "default"
              },
              "Only active stations": {
                "description": "Only active stations",
                "value": "Active"
              },
              "Only inactive stations": {
                "description": "Only inactive stations",
                "value": "Inactive"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by station type",
            "required": false,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "required": false,
            "style": "form",
            "schema": {
              "maximum": 300000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of results to skip before returning matching results",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Select stations within bounding box. Southwesterly point (lon,lat) followed by northeasterly point (lon, lat)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maxItems": 6,
              "minItems": 4,
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "examples": {
              "default": {
                "description": "default"
              },
              "Select observations within bounding box.": {
                "description": "Select observations within bounding box.",
                "value": "14,55,15,56"
              }
            }
          },
          {
            "name": "bbox-crs",
            "in": "query",
            "description": "Which coordinate reference system to use. Only the CRS84 is supported",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "default": {
                "description": "default",
                "value": "https://www.opengis.net/def/crs/OGC/1.3/CRS84"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureCollection"
                },
                "example": {
                  "type": "FeatureCollection",
                  "features": [
                    {
                      "geometry": {
                        "coordinates": [
                          8.1152,
                          56.5246
                        ],
                        "type": "Point"
                      },
                      "id": "05980ec7-87f3-4637-ad0f-7940b351651b",
                      "type": "Feature",
                      "properties": {
                        "country": "DNK",
                        "name": "Ferring",
                        "owner": "Kystdirektoratet / Coastal Authority",
                        "parameterId": [
                          "sea_reg",
                          "tw"
                        ],
                        "stationId": "9004303",
                        "status": "Active",
                        "timeCreated": "2020-06-08T10-05-26Z",
                        "timeOperationFrom": "2000-06-01T00-00-00Z",
                        "timeOperationTo": "",
                        "timeUpdated": "",
                        "timeValidFrom": "2000-06-01T00-00-00Z",
                        "timeValidTo": "",
                        "type": "Tide-gauge-primary"
                      }
                    }
                  ],
                  "timeStamp": "2020-06-26T11:46:46Z",
                  "numberReturned": 1,
                  "links": [
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/station/items?api-key=test&limit=1",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "This document"
                    },
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/station/items?api-key=test&limit=1&offset=1",
                      "rel": "next",
                      "type": "application/geo+json",
                      "title": "Next set of results"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server Error - The server failed to fulfill an apparently valid request.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 500 or 507\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Could not uniquely identify feature by id",
                  "status": 500,
                  "error": "Internal Server Error"
                }
              }
            }
          },
          "4XX": {
            "description": "Client Error - The request contains bad syntax or cannot be fulfilled.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 400 or 404\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unknown sortorder",
                  "status": 400,
                  "error": "Bad Request"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v2/metObs/collections/station/items/{id}": {
      "get": {
        "tags": [
          "Met station"
        ],
        "summary": "Get a single station",
        "operationId": "getStationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                },
                "example": {
                  "geometry": {
                    "coordinates": [
                      10.5466,
                      56.1103
                    ],
                    "type": "Point"
                  },
                  "links": [
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/station/items/002d2d50-1181-4b4d-bdb3-547cae5bf6ac?api-key=test",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "This document"
                    },
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/station?api-key=test",
                      "rel": "collection",
                      "type": "application/json",
                      "title": "The collection document"
                    }
                  ],
                  "id": "002d2d50-1181-4b4d-bdb3-547cae5bf6ac",
                  "type": "Feature",
                  "properties": {
                    "barometerHeight": null,
                    "country": "DNK",
                    "created": "2021-02-11T16:25:51Z",
                    "name": "Årslev",
                    "operationFrom": "2012-01-01T00:00:00Z",
                    "operationTo": null,
                    "owner": "DMI",
                    "parameterId": [
                      "snow_cover_man",
                      "snow_depth_man"
                    ],
                    "regionId": null,
                    "stationHeight": null,
                    "stationId": "28280",
                    "status": "Active",
                    "type": "Manual snow",
                    "updated": null,
                    "validFrom": "2012-01-01T00:00:00Z",
                    "validTo": "2019-11-19T10:16:27Z",
                    "wmoCountryCode": null,
                    "wmoStationId": null
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "Server Error - The server failed to fulfill an apparently valid request.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 500 or 507\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Could not uniquely identify feature by id",
                  "status": 500,
                  "error": "Internal Server Error"
                }
              }
            }
          },
          "4XX": {
            "description": "Client Error - The request contains bad syntax or cannot be fulfilled.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 400 or 404\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unknown sortorder",
                  "status": 400,
                  "error": "Bad Request"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v2/metObs/collections/observation": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Get information about the observation feature collection",
        "externalDocs": {
          "url": "https://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_collections_"
        },
        "operationId": "getObservationCollection",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          }
        }
      }
    },
    "/v2/metObs/collections/observation/items": {
      "get": {
        "tags": [
          "Met observation"
        ],
        "summary": "Get met observations",
        "operationId": "getObservation",
        "parameters": [
          {
            "name": "datetime",
            "in": "query",
            "description": "datetime searching as specified in https://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_parameter_datetime \nan dates as specified in RFC3339 https://tools.ietf.org/html/rfc3339",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "default": {
                "description": "default"
              },
              "Observations on February 12, 2018, 00:00:00 UTC or later:": {
                "description": "Returns observations after and on a given start time.",
                "value": "2018-02-12T00:00:00Z/.."
              },
              "Observations from February 12, 2018, 00:00:00 UTC to March 18, 2018, 12:31:12 UTC:": {
                "description": "Returns observation on a closed time interval.",
                "value": "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
              },
              "Observation on February 12, 2018, 23:20:52 UTC:": {
                "description": "Returns observation on a specific timestamp.",
                "value": "2018-02-12T23:20:52Z"
              },
              "Observations on March 18, 2018, 12:31:12 UTC or earlier:": {
                "description": "Returns observations before and up til a given end time ",
                "value": "../2018-03-18T12:31:12Z"
              }
            }
          },
          {
            "name": "period",
            "in": "query",
            "description": "Period from which to return results. Alternative to using from/to parameters",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "default": {
                "description": "default"
              },
              "latest day": {
                "description": "Returns observations from now and 1 day back.",
                "value": "latest-day"
              },
              "latest hour": {
                "description": "Returns observations from now and 1 hour back.",
                "value": "latest-hour"
              },
              "latest 10 minutes": {
                "description": "Returns observations from now and 10 minutes back.",
                "value": "latest-10-minutes"
              },
              "latest week": {
                "description": "Returns observations from now and 1 week back.",
                "value": "latest-week"
              },
              "latest month": {
                "description": "Returns observations from now and 1 month back.",
                "value": "latest-month"
              },
              "latest": {
                "description": "Returns latest observation.",
                "value": "latest"
              }
            }
          },
          {
            "name": "stationId",
            "in": "query",
            "description": "Filter by stationId",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameterId",
            "in": "query",
            "description": "Filter by parameterId - see parameter list <a href=\"https://opendatadocs.dmi.govcloud.dk/en/Data/Meteorological_Observation_Data\">here</a>",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "temp_dry",
                "temp_mean_past1h",
                "temp_max_past1h",
                "temp_min_past1h",
                "temp_max_past12h",
                "temp_min_past12h",
                "humidity_past1h",
                "wind_dir_past1h",
                "wind_speed",
                "wind_speed_past1h",
                "wind_gust_always_past1h",
                "wind_max_per10min_past1h",
                "precip_past1h",
                "precip_past24h",
                "precip_dur_past1h",
                "sun_last1h_glob",
                "radia_glob_past1h",
                "visibility",
                "cloud_height",
                "cloud_cover",
                "snow_depth_man",
                "snow_cover_man",
                "temp_soil_max_past1h",
                "humidity",
                "temp_dew",
                "precip_past10min",
                "sun_last10min_glob",
                "wind_min_past1h",
                "wind_min",
                "temp_grass_max_past1h",
                "visib_mean_last10min",
                "temp_grass_min_past1h",
                "leav_hum_dur_past1h",
                "weather",
                "temp_grass",
                "pressure",
                "temp_soil",
                "radia_glob",
                "wind_max",
                "pressure_at_sea",
                "wind_dir",
                "temp_soil_mean_past1h",
                "precip_past1min",
                "temp_grass_mean_past1h",
                "precip_dur_past10min",
                "leav_hum_dur_past10min",
                "temp_soil_min_past1h"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return",
            "required": false,
            "style": "form",
            "schema": {
              "maximum": 300000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "number of results to skip before returning matching results",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortorder",
            "in": "query",
            "description": "Order by which to return results. Default is not sorted",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "default": {
                "description": "default"
              },
              "Descending sort": {
                "description": "Descending sort",
                "value": "observed,DESC"
              }
            }
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Select observations within bounding box. Southwesterly point (lon,lat) followed by northeasterly point (lon, lat)",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "maxItems": 6,
              "minItems": 4,
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "examples": {
              "default": {
                "description": "default"
              },
              "Select observations within bounding box.": {
                "description": "Select observations within bounding box.",
                "value": "11.1126,55.2415,12.6892,56.1394"
              }
            }
          },
          {
            "name": "bbox-crs",
            "in": "query",
            "description": "Which coordinate reference system to use. Only the CRS84 is supported",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "default": {
                "description": "default",
                "value": "https://www.opengis.net/def/crs/OGC/1.3/CRS84"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureCollection"
                },
                "example": {
                  "type": "FeatureCollection",
                  "features": [
                    {
                      "geometry": {
                        "coordinates": [
                          9.753,
                          55.5595
                        ],
                        "type": "Point"
                      },
                      "id": "10229287953820001590665200882871",
                      "type": "Feature",
                      "properties": {
                        "parameterId": "sealev_ln",
                        "stationId": "23293",
                        "created": "2020-05-28T11:26:40.882871Z",
                        "observed": "2002-06-01T10:53:15.382000Z",
                        "value": 31.0
                      }
                    }
                  ],
                  "timeStamp": "2020-06-26T12:02:56Z",
                  "numberReturned": 1,
                  "links": [
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/observation/items?api-key=test&limit=1",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "This document"
                    },
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/observation/items?api-key=test&limit=1&offset=1",
                      "rel": "next",
                      "type": "application/geo+json",
                      "title": "Next set of results"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server Error - The server failed to fulfill an apparently valid request.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 500 or 507\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Could not uniquely identify feature by id",
                  "status": 500,
                  "error": "Internal Server Error"
                }
              }
            }
          },
          "4XX": {
            "description": "Client Error - The request contains bad syntax or cannot be fulfilled.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 400 or 404\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unknown sortorder",
                  "status": 400,
                  "error": "Bad Request"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v2/metObs/collections/observation/items/{id}": {
      "get": {
        "tags": [
          "Met observation"
        ],
        "summary": "Get a single met observation",
        "operationId": "getObservationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f-]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/geo+json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                },
                "example": {
                  "geometry": {
                    "coordinates": [
                      9.753,
                      55.5595
                    ],
                    "type": "Point"
                  },
                  "id": "10229287953820001590665200882871",
                  "type": "Feature",
                  "properties": {
                    "parameterId": "sealev_ln",
                    "stationId": "23293",
                    "created": "2020-05-28T11:26:40.882871Z",
                    "observed": "2002-06-01T10:53:15.382000Z",
                    "value": 31.0
                  },
                  "links": [
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/observation/items?api-key=test&limit=1",
                      "rel": "self",
                      "type": "application/geo+json",
                      "title": "This document"
                    },
                    {
                      "href": "https://dmigw.govcloud.dk/v2/metObs/collections/observation/items?api-key=test&limit=1&offset=1",
                      "rel": "next",
                      "type": "application/geo+json",
                      "title": "Next set of results"
                    }
                  ]
                }
              }
            }
          },
          "5XX": {
            "description": "Server Error - The server failed to fulfill an apparently valid request.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 500 or 507\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Could not uniquely identify feature by id",
                  "status": 500,
                  "error": "Internal Server Error"
                }
              }
            }
          },
          "4XX": {
            "description": "Client Error - The request contains bad syntax or cannot be fulfilled.<br/>The body will be structured using this format:<br/>{\"message\":\"the error message\", \"status\":\"the value of the HTTP response code, e.g. 400 or 404\", \"error\":\"the value of the HTTP response code phrase \"}",
            "content": {
              "application/json": {
                "example": {
                  "message": "Unknown sortorder",
                  "status": 400,
                  "error": "Bad Request"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v2/metObs/": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "Landing page for service",
        "externalDocs": {
          "url": "https://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_api_landing_page"
        },
        "operationId": "getLandingPage",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Conformance": {
        "type": "object",
        "properties": {
          "conformsTo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "extent": {
            "$ref": "#/components/schemas/Extent"
          },
          "crs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "itemType": {
            "type": "string"
          }
        }
      },
      "Collections": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection"
            }
          }
        }
      },
      "Extent": {
        "type": "object",
        "properties": {
          "spatial": {
            "$ref": "#/components/schemas/Spatial"
          },
          "temporal": {
            "$ref": "#/components/schemas/Temporal"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "rel": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Spatial": {
        "type": "object",
        "properties": {
          "bbox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "crs": {
            "type": "string"
          }
        }
      },
      "Temporal": {
        "type": "object",
        "properties": {
          "interval": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trs": {
            "type": "string"
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "bbox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "id": {
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/Geometry"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "FeatureCollection": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "bbox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          }
        }
      },
      "Geometry": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "bbox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "LandingPage": {
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "conformsTo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stac_version": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "name": "api-key",
        "in": "query"
      }
    }
  }
}
